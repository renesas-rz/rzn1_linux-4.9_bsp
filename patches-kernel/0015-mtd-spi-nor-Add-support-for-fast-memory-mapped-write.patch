From 8900c8fd93d5a19da4f1f02fc05614ad56a4a19e Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Mon, 6 Jun 2016 12:03:18 +0100
Subject: [PATCH] mtd: spi-nor: Add support for fast memory-mapped writes

Some SPI flash controllers provide a memory-mapped interface
for read and write. The controllers handle everything, all we
need to do is copy data to the memory mapped area.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 14 ++++++++++++++
 include/linux/mtd/spi-nor.h   |  2 ++
 2 files changed, 16 insertions(+)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 06ca9a0..ac26b00 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -1168,6 +1168,20 @@ static int spi_nor_write(struct mtd_info *mtd, loff_t to, size_t len,
 	if (ret)
 		return ret;
 
+	/* Fast memory-mapped write support */
+	if (nor->write_mmap) {
+		ssize_t written;
+
+		ret = nor->write_mmap(nor, to, len, buf);
+		if (ret < 0)
+			goto write_err;
+		written = ret;
+		*retlen += written;
+		ret = spi_nor_wait_till_ready(nor);
+		spi_nor_unlock_and_unprep(nor, SPI_NOR_OPS_WRITE);
+		return ret;
+	}
+
 	for (i = 0; i < len; ) {
 		ssize_t written;
 
diff --git a/include/linux/mtd/spi-nor.h b/include/linux/mtd/spi-nor.h
index c425c7b..6996095 100644
--- a/include/linux/mtd/spi-nor.h
+++ b/include/linux/mtd/spi-nor.h
@@ -177,6 +177,8 @@ struct spi_nor {
 			size_t len, u_char *read_buf);
 	ssize_t (*write)(struct spi_nor *nor, loff_t to,
 			size_t len, const u_char *write_buf);
+	ssize_t (*write_mmap)(struct spi_nor *nor, loff_t to,
+			size_t len, const u_char *write_buf);
 	int (*erase)(struct spi_nor *nor, loff_t offs);
 
 	int (*flash_lock)(struct spi_nor *nor, loff_t ofs, uint64_t len);
-- 
2.7.4

