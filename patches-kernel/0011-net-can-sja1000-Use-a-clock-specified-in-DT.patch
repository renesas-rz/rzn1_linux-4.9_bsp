From 237fb5ca66bf319c9a6c3f30352644984b8da1ca Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Wed, 13 Jan 2016 17:42:01 +0000
Subject: [PATCH] net: can: sja1000: Use a clock specified in DT

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 drivers/net/can/sja1000/sja1000_platform.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/net/can/sja1000/sja1000_platform.c b/drivers/net/can/sja1000/sja1000_platform.c
index b07e484..b26954b 100644
--- a/drivers/net/can/sja1000/sja1000_platform.c
+++ b/drivers/net/can/sja1000/sja1000_platform.c
@@ -25,6 +25,7 @@
 #include <linux/irq.h>
 #include <linux/can/dev.h>
 #include <linux/can/platform/sja1000.h>
+#include <linux/clk.h>
 #include <linux/io.h>
 #include <linux/of.h>
 #include <linux/of_device.h>
@@ -228,6 +229,7 @@ static int sp_probe(struct platform_device *pdev)
 	const struct of_device_id *of_id;
 	const struct sja1000_of_data *of_data = NULL;
 	size_t priv_sz = 0;
+	struct clk *clk;
 
 	pdata = dev_get_platdata(&pdev->dev);
 	if (!pdata && !of) {
@@ -291,6 +293,13 @@ static int sp_probe(struct platform_device *pdev)
 		sp_populate(priv, pdata, res_mem->flags);
 	}
 
+	/* If we have a clock, enable it and use it to get the clock rate */
+	clk = devm_clk_get(&pdev->dev, NULL);
+	if (!IS_ERR(clk)) {
+		clk_prepare_enable(clk);
+		priv->can.clock.freq = clk_get_rate(clk) / 2;
+	}
+
 	platform_set_drvdata(pdev, dev);
 	SET_NETDEV_DEV(dev, &pdev->dev);
 
-- 
2.7.4

