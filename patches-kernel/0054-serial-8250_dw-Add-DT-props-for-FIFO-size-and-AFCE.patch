From 12809ed856dbbdfe6d49f8a4a6637e0ec23b14c2 Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Fri, 30 Jun 2017 08:49:36 +0100
Subject: [PATCH] serial: 8250_dw: Add DT props for FIFO size and AFCE

If the UART IP has been configured with UART_ADD_ENCODED_PARAMS=0, it
doesn't have a Component Parameter Register (CPR). The CPR provides
information on the FIFO size and AFCE, so this change allows this
information to be specified via DT properites.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 .../devicetree/bindings/serial/snps-dw-apb-uart.txt  |  4 ++++
 drivers/tty/serial/8250/8250_dw.c                    | 20 ++++++++++++++++----
 2 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/Documentation/devicetree/bindings/serial/snps-dw-apb-uart.txt b/Documentation/devicetree/bindings/serial/snps-dw-apb-uart.txt
index 12bbe9f..3268fe3 100644
--- a/Documentation/devicetree/bindings/serial/snps-dw-apb-uart.txt
+++ b/Documentation/devicetree/bindings/serial/snps-dw-apb-uart.txt
@@ -36,6 +36,10 @@ Optional properties:
 - ri-override : Override the RI modem status signal. This signal will always be
   reported as inactive instead of being obtained from the modem status register.
   Define this if your serial port does not use this pin.
+- fifo-size : If the IP does not have a Component Parameter Register (CPR), you
+  can specify the FIFO size using this property.
+- afce-mode : If the IP does not have a Component Parameter Register (CPR), you
+  can specify Auto Flow Control Enabled using this property.
 
 Example:
 
diff --git a/drivers/tty/serial/8250/8250_dw.c b/drivers/tty/serial/8250/8250_dw.c
index 459d726..568c4f9 100644
--- a/drivers/tty/serial/8250/8250_dw.c
+++ b/drivers/tty/serial/8250/8250_dw.c
@@ -344,14 +344,14 @@ static void dw8250_setup_port(struct uart_port *p)
 		reg = ioread32be(p->membase + DW_UART_CPR);
 	else
 		reg = readl(p->membase + DW_UART_CPR);
-	if (!reg)
-		return;
 
 	/* Select the type based on fifo */
-	if (reg & DW_UART_CPR_FIFO_MODE) {
+	if (reg & DW_UART_CPR_FIFO_MODE)
+		p->fifosize = DW_UART_CPR_FIFO_SIZE(reg);
+
+	if (p->fifosize) {
 		p->type = PORT_16550A;
 		p->flags |= UPF_FIXED_TYPE;
-		p->fifosize = DW_UART_CPR_FIFO_SIZE(reg);
 		up->capabilities = UART_CAP_FIFO;
 	}
 
@@ -443,6 +443,18 @@ static int dw8250_probe(struct platform_device *pdev)
 		data->msr_mask_off |= UART_MSR_TERI;
 	}
 
+	/* FIFO size */
+	err = device_property_read_u32(dev, "fifo-size", &val);
+	if (!err)
+		p->fifosize = val;
+
+	/* Auto Flow Control Enabled mode */
+	if (device_property_read_bool(dev, "afce-mode")) {
+		struct uart_8250_port *up = up_to_u8250p(p);
+
+		up->capabilities |= UART_CAP_AFE;
+	}
+
 	/* Always ask for fixed clock rate from a property. */
 	device_property_read_u32(dev, "clock-frequency", &p->uartclk);
 
-- 
2.7.4

