From 5971ea8fa361e14ae14bbbc6511e18492fe1b116 Mon Sep 17 00:00:00 2001
From: Michel Pollet <michel.pollet@bp.renesas.com>
Date: Tue, 14 Jul 2015 10:02:04 +0100
Subject: [PATCH] rzn1: Renesas RZ/N1 System Device Tree files

These are the common system device tree files, namely the clock tree
that was generated from the device specification documents, and the main
device description file that is meant to me included for Board specific
device tree files.

Signed-off-by: Michel Pollet <michel.pollet@bp.renesas.com>
---
 arch/arm/boot/dts/rzn1-clocks.dtsi | 1069 ++++++++++++++++++++++++++++++++++++
 arch/arm/boot/dts/rzn1.dtsi        |  913 ++++++++++++++++++++++++++++++
 2 files changed, 1982 insertions(+)
 create mode 100644 arch/arm/boot/dts/rzn1-clocks.dtsi
 create mode 100644 arch/arm/boot/dts/rzn1.dtsi

diff --git a/arch/arm/boot/dts/rzn1-clocks.dtsi b/arch/arm/boot/dts/rzn1-clocks.dtsi
new file mode 100644
index 0000000..2ccbcd9
--- /dev/null
+++ b/arch/arm/boot/dts/rzn1-clocks.dtsi
@@ -0,0 +1,1069 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+
+&clocks {
+	clk_25_pg4: clk_25_pg4@RZN1_CLK_25MHZ_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG4_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg5: clk_25_pg5@RZN1_CLK_25MHZ_PG5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG5_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg6: clk_25_pg6@RZN1_CLK_25MHZ_PG6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG6_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg7: clk_25_pg7@RZN1_CLK_25MHZ_PG7_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG7_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg8: clk_25_pg8@RZN1_CLK_25MHZ_PG8_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG8_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_48_pg4: clk_48_pg4@RZN1_CLK_48MHZ_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_48MHZ_PG4_ID>;
+		clocks = <&clk_48>;
+	};
+	clk_48_pg_f: clk_48_pg_f@RZN1_CLK_48MHZ_PG_F_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_48MHZ_PG_F_ID>;
+		clocks = <&clk_48>;
+	};
+	clk_adc: clk_adc@RZN1_CLK_ADC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ADC_ID>;
+		clocks = <&div_adc>;
+	};
+	clk_cm3: clk_cm3@RZN1_CLK_CM3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_CM3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_ddrc: clk_ddrc@RZN1_CLK_DDRC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_DDRC_ID>;
+		clocks = <&clk_ddrphy_pllclk_d4>;
+	};
+	clk_ddrphy_pllclk_d4: clk_ddrphy_pllclk_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ddrphy_pllclk>;
+	};
+	clk_ecat100: clk_ecat100@RZN1_CLK_ECAT100_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ECAT100_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_ecat100_d4: clk_ecat100_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ecat100>;
+	};
+	clk_ecat25: clk_ecat25@RZN1_CLK_ECAT25_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ECAT25_ID>;
+		clocks = <&clk_ecat100_d4>;
+	};
+	clk_hsr: clk_hsr {
+		#clock-cells = <0>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_hsr50: clk_hsr50@RZN1_CLK_HSR50_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HSR50_ID>;
+		clocks = <&clk_hsr_dup_d2>;
+	};
+	clk_hsr_dup: clk_hsr_dup@RZN1_CLK_HSR_DUP_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HSR_DUP_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_rxgmii_switch: clk_hsr_dup_d2: clk_hsr_dup_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clk_hsr_dup>;
+	};
+	clk_hw_rtos: clk_hw_rtos@RZN1_CLK_HW_RTOS_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HW_RTOS_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_i2c0: clk_i2c0@RZN1_CLK_I2C0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_I2C0_ID>;
+		clocks = <&div_i2c>;
+	};
+	clk_i2c1: clk_i2c1@RZN1_CLK_I2C1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_I2C1_ID>;
+		clocks = <&div_i2c>;
+	};
+	clk_mii_ref: clk_mii_ref@RZN1_CLK_MII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_MII_REF_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_nand: clk_nand@RZN1_CLK_NAND_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_NAND_ID>;
+		clocks = <&div_nand>;
+	};
+	clk_nousbp2_pg6: clk_nousbp2_pg6@RZN1_CLK_NOUSBP2_PG6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_NOUSBP2_PG6_ID>;
+		clocks = <&div_p2_pg>;
+	};
+	clk_p1_pg2: clk_p1_pg2@RZN1_CLK_P1_PG2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG2_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p1_pg3: clk_p1_pg3@RZN1_CLK_P1_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG3_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p1_pg4: clk_p1_pg4@RZN1_CLK_P1_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG4_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p4_pg3: clk_p4_pg3@RZN1_CLK_P4_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P4_PG3_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_p4_pg4: clk_p4_pg4@RZN1_CLK_P4_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P4_PG4_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_p6_pg1: clk_p6_pg1@RZN1_CLK_P6_PG1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG1_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg2: clk_p6_pg2@RZN1_CLK_P6_PG2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG2_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg3: clk_p6_pg3@RZN1_CLK_P6_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG3_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg4: clk_p6_pg4@RZN1_CLK_P6_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG4_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_pci_usb: clk_pci_usb@RZN1_CLK_PCI_USB_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_PCI_USB_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_48: clk_pll_usb: clk_pll_usb {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <48000000>;
+		clocks = <&clkin_d2>;
+	};
+	clk_ptp_mac0: clk_ptp_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk25>, <&clk50>;
+	};
+	clk_ptp_mac1: clk_ptp_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk25>, <&clk50>;
+	};
+	clk_ptp_switch: clk_ptp_switch {
+		#clock-cells = <0>;
+	};
+	clk_qspi0: clk_qspi0@RZN1_CLK_QSPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_QSPI0_ID>;
+		clocks = <&div_qspi0>;
+	};
+	clk_qspi1: clk_qspi1@RZN1_CLK_QSPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_QSPI1_ID>;
+		clocks = <&div_qspi1>;
+	};
+	clk_ddrphy_pclk: clk_fw_ace: clk_cm3_dapclk_apb: 
+		clk_cm3_dapclk_ahb: clk_cm3_dapclk_axi: clk_cm3_hclk: 
+		clk_cm3_atclk: clk_cm3_dapclk: clk_ram_sys: clk_fw: 
+		clk_fw_ddr_ahb: clk_crypto_pe: clk_crypto_aes: 
+		clk_crypto_des: clk_crypto_arc4: clk_crypto_hash: clk_ref_sync_d4: clk_ref_sync_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ref_sync>;
+	};
+	clk_fwdiv2: clk_ref_sync_d8: clk_ref_sync_d8 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <8>;
+		clock-mult = <1>;
+		clocks = <&clk_ref_sync>;
+	};
+	clk_rgmii_ref: clk_rgmii_ref@RZN1_CLK_RGMII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_RGMII_REF_ID>;
+		clocks = <&clkout_d8>;
+	};
+	clk_rmii_ref: clk_rmii_ref@RZN1_CLK_RMII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_RMII_REF_ID>;
+		clocks = <&clkout_d20>;
+	};
+	clk_rxgmii_mac0: clk_rxgmii_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&eth_tx_clk>, <&clk50>;
+	};
+	clk_rxgmii_mac1: clk_rxgmii_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&clk125>, <&clk50>;
+	};
+	clk_sdio0: clk_sdio0@RZN1_CLK_SDIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SDIO0_ID>;
+		clocks = <&div_sdio0>;
+	};
+	clk_sdio1: clk_sdio1@RZN1_CLK_SDIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SDIO1_ID>;
+		clocks = <&div_sdio1>;
+	};
+	clk_sercos100: clk_sercos100@RZN1_CLK_SERCOS100_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SERCOS100_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_sercos100_d2: clk_sercos100_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clk_sercos100>;
+	};
+	clk_sercos50: clk_sercos50@RZN1_CLK_SERCOS50_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SERCOS50_ID>;
+		clocks = <&clk_sercos100_d2>;
+	};
+	clk_slcd: clk_slcd@RZN1_CLK_SLCD_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SLCD_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_spi0: clk_spi0@RZN1_CLK_SPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI0_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi1: clk_spi1@RZN1_CLK_SPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI1_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi2: clk_spi2@RZN1_CLK_SPI2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI2_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi3: clk_spi3@RZN1_CLK_SPI3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI3_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi4: clk_spi4@RZN1_CLK_SPI4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI4_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_spi5: clk_spi5@RZN1_CLK_SPI5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI5_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_switch: clk_switch@RZN1_CLK_SWITCH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SWITCH_ID>;
+		clocks = <&div_switch>;
+	};
+	clk_txgmii_mac0: clk_txgmii_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_txgmii_mac1: clk_txgmii_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_txgmii_switch: clk_txgmii_switch {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_40_sysctrl: clkin: clkin {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <40000000>;
+	};
+	clk_20_otp: clkin_d2: clkin_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clkin>;
+	};
+	clkout: clkout {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <1000000000>;
+	};
+	clkout_d10: clkout_d10 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <10>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	msebis_clk: msebim_clk: clkout_d16: clkout_d16 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <16>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk_cm3_stclk: clkout_d160: clkout_d160 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <160>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk_ddrphy_sr_hrclk: clk_ddrphy_pllclk: clkout_d1or2: clkout_d1or2 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3>;
+		renesas,rzn1-div-min = <1>;
+		renesas,rzn1-div-max = <2>;
+		clocks = <&clkout>;
+	};
+	clk50: clkout_d20: clkout_d20 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <20>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk25: clk_25: clkout_d40: clkout_d40 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <40>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk2_5: clkout_d400: clkout_d400 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <400>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clkout_d5: clkout_d5 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <5>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk125: clkout_d8: clkout_d8 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <8>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	ddr_pll_nr: ddr_pll_nr {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	div_adc: div_adc@RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <50>;
+		renesas,rzn1-div-max = <250>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV>;
+		clocks = <&clkout>;
+	};
+	clk_a7mp: div_ca7: div_ca7@RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <1>;
+		renesas,rzn1-div-max = <4>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV>;
+		renesas,rzn1-div-table = <1 2 4>;
+		clocks = <&clk_ref_sync>;
+	};
+	div_i2c: div_i2c@RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x1f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <16>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV>;
+		clocks = <&clkout>;
+	};
+	clk_motordiv: clk_motor: div_motor: div_motor@RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xf>;
+		renesas,rzn1-div-min = <2>;
+		renesas,rzn1-div-max = <8>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV>;
+		clocks = <&clkout_d5>;
+	};
+	div_nand: div_nand@RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <32>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV>;
+		clocks = <&clkout>;
+	};
+	div_p1_pg: div_p1_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <200>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV>;
+		clocks = <&clkout>;
+	};
+	div_p2_pg: div_p2_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV>;
+		clocks = <&clkout>;
+	};
+	div_p3_pg: div_p3_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <8>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV>;
+		clocks = <&clkout>;
+	};
+	div_p4_pg: div_p4_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <8>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV>;
+		clocks = <&clkout>;
+	};
+	clk_p5_pg1: div_p5_pg: div_p5_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <10>;
+		renesas,rzn1-div-max = <40>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV>;
+		clocks = <&clkout>;
+	};
+	div_p6_pg: div_p6_pg@RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <64>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV>;
+		clocks = <&clkout>;
+	};
+	div_qspi0: div_qspi0@RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <3>;
+		renesas,rzn1-div-max = <7>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV>;
+		clocks = <&clkout>;
+	};
+	div_qspi1: div_qspi1@RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <3>;
+		renesas,rzn1-div-max = <7>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV>;
+		clocks = <&clkout>;
+	};
+	clk_ref_sync: ddr_clk_div: div_ref_sync: div_ref_sync@RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x1f>;
+		renesas,rzn1-div-min = <2>;
+		renesas,rzn1-div-max = <16>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV>;
+		renesas,rzn1-div-table = <2 4 8 16>;
+		clocks = <&clkout>;
+	};
+	div_sdio0: div_sdio0@RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <20>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV>;
+		clocks = <&clkout>;
+	};
+	div_sdio1: div_sdio1@RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <20>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV>;
+		clocks = <&clkout>;
+	};
+	div_switch: div_switch@RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <5>;
+		renesas,rzn1-div-max = <40>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV>;
+		clocks = <&clkout>;
+	};
+	div_uart: div_uart@RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV>;
+		clocks = <&clkout>;
+	};
+	eth_rx_clk: eth_rx_clk {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	eth_tx_clk: eth_tx_clk {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	hclk_adc: hclk_adc@RZN1_HCLK_ADC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ADC_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_can0: hclk_can0@RZN1_HCLK_CAN0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CAN0_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_can1: hclk_can1@RZN1_HCLK_CAN1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CAN1_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_cm3: hclk_cm3@RZN1_HCLK_CM3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CM3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_crypto_eip150: hclk_crypto_eip150@RZN1_HCLK_CRYPTO_EIP150_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CRYPTO_EIP150_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_crypto_eip93: hclk_crypto_eip93@RZN1_HCLK_CRYPTO_EIP93_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CRYPTO_EIP93_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_ddrc: hclk_ddrc@RZN1_HCLK_DDRC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DDRC_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_deltasigma: hclk_deltasigma@RZN1_HCLK_DELTASIGMA_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DELTASIGMA_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_dma0: hclk_dma0@RZN1_HCLK_DMA0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DMA0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_dma1: hclk_dma1@RZN1_HCLK_DMA1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DMA1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_ecat125: hclk_ecat125@RZN1_HCLK_ECAT125_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ECAT125_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_gmac0: hclk_gmac0@RZN1_HCLK_GMAC0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GMAC0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gmac1: hclk_gmac1@RZN1_HCLK_GMAC1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GMAC1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio0: hclk_gpio0@RZN1_HCLK_GPIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio1: hclk_gpio1@RZN1_HCLK_GPIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio2: hclk_gpio2@RZN1_HCLK_GPIO2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO2_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_hsr: hclk_hsr@RZN1_HCLK_HSR_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_HSR_ID>;
+		clocks = <&clk_hsr_dup_d2>;
+	};
+	hclk_i2c0: hclk_i2c0@RZN1_HCLK_I2C0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_I2C0_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_i2c1: hclk_i2c1@RZN1_HCLK_I2C1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_I2C1_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_lcd: hclk_lcd@RZN1_HCLK_LCD_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_LCD_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_msebi_m: hclk_msebi_m@RZN1_HCLK_MSEBI_M_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_MSEBI_M_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_msebi_s: hclk_msebi_s@RZN1_HCLK_MSEBI_S_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_MSEBI_S_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_nand: hclk_nand@RZN1_HCLK_NAND_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_NAND_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg19: hclk_pg19@RZN1_HCLK_PG19_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG19_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg20: hclk_pg20@RZN1_HCLK_PG20_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG20_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg3: hclk_pg3@RZN1_HCLK_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg4: hclk_pg4@RZN1_HCLK_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg_i: hclk_pg_i@RZN1_HCLK_PG_I_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG_I_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pinconfig: hclk_pinconfig@RZN1_HCLK_PINCONFIG_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PINCONFIG_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_pwmpto: hclk_pwmpto@RZN1_HCLK_PWMPTO_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PWMPTO_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_qspi0: hclk_qspi0@RZN1_HCLK_QSPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_QSPI0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_qspi1: hclk_qspi1@RZN1_HCLK_QSPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_QSPI1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_rom: hclk_rom@RZN1_HCLK_ROM_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ROM_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_rsv: hclk_rsv@RZN1_HCLK_RSV_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_RSV_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_rtc: hclk_rtc@RZN1_HCLK_RTC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_RTC_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_sdio0: hclk_sdio0@RZN1_HCLK_SDIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SDIO0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_sdio1: hclk_sdio1@RZN1_HCLK_SDIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SDIO1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_semap: hclk_semap@RZN1_HCLK_SEMAP_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SEMAP_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_sercos: hclk_sercos@RZN1_HCLK_SERCOS_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SERCOS_ID>;
+		clocks = <&clkout_d10>;
+	};
+	hclk_sgpio0: hclk_sgpio0@RZN1_HCLK_SGPIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO0_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_sgpio1: hclk_sgpio1@RZN1_HCLK_SGPIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO1_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_sgpio2: hclk_sgpio2@RZN1_HCLK_SGPIO2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO2_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_sgpio3: hclk_sgpio3@RZN1_HCLK_SGPIO3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO3_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_sgpio4: hclk_sgpio4@RZN1_HCLK_SGPIO4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO4_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_spi0: hclk_spi0@RZN1_HCLK_SPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi1: hclk_spi1@RZN1_HCLK_SPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi2: hclk_spi2@RZN1_HCLK_SPI2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI2_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi3: hclk_spi3@RZN1_HCLK_SPI3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi4: hclk_spi4@RZN1_HCLK_SPI4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi5: hclk_spi5@RZN1_HCLK_SPI5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI5_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_switch: hclk_switch@RZN1_HCLK_SWITCH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SWITCH_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_switch_rg: hclk_switch_rg@RZN1_HCLK_SWITCH_RG_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SWITCH_RG_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_timer0: hclk_timer0@RZN1_HCLK_TIMER0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_TIMER0_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_timer1: hclk_timer1@RZN1_HCLK_TIMER1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_TIMER1_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_uart0: hclk_uart0@RZN1_HCLK_UART0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART0_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart1: hclk_uart1@RZN1_HCLK_UART1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART1_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart2: hclk_uart2@RZN1_HCLK_UART2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART2_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart3: hclk_uart3@RZN1_HCLK_UART3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart4: hclk_uart4@RZN1_HCLK_UART4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart5: hclk_uart5@RZN1_HCLK_UART5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART5_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart6: hclk_uart6@RZN1_HCLK_UART6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART6_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart7: hclk_uart7@RZN1_HCLK_UART7_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART7_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_usbf: hclk_usbf@RZN1_HCLK_USBF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBF_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_usbh: hclk_usbh@RZN1_HCLK_USBH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBH_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_usbpm: hclk_usbpm@RZN1_HCLK_USBPM_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBPM_ID>;
+		clocks = <&clkout_d8>;
+	};
+	rgmii_refclk: rgmii_refclk {
+		#clock-cells = <0>;
+	};
+	rtos_mdc: rtos_mdc@RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3ff>;
+		renesas,rzn1-div-min = <80>;
+		renesas,rzn1-div-max = <640>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV>;
+		renesas,rzn1-div-table = <80 160 320 640>;
+		clocks = <&clk_ref_sync>;
+	};
+};
diff --git a/arch/arm/boot/dts/rzn1.dtsi b/arch/arm/boot/dts/rzn1.dtsi
new file mode 100644
index 0000000..aa160f1
--- /dev/null
+++ b/arch/arm/boot/dts/rzn1.dtsi
@@ -0,0 +1,913 @@
+/*
+ * Device Tree Source for the Renesas RZ/N1 SoC
+ *
+ * Copyright (C) 2016 Renesas Electronics Europe Ltd
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2.  This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/rzn1-irq.h>
+#include <dt-bindings/soc/rzn1-memory-map.h>
+#include <dt-bindings/soc/rzn1-sysctrl.h>
+#include <dt-bindings/pinctrl/pinctrl-rzn1.h>
+#include <dt-bindings/clock/rzn1-clocks.h>
+
+#include "skeleton.dtsi"
+
+/ {
+	compatible = "renesas,rzn1";
+	interrupt-parent = <&gic>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	chosen {
+		/* These nodes are specific to the rzn1, and are CAN by the
+		 * bootloader. They are optional
+		   rzn1,bootaddr = <0xxxxxxxxx>  -- this property is set
+		        by the bootloader when it starts in NONSEC mode, this
+		        property will contain the address that the second CA7
+		        core is 'parked' at, and where it is looking for the
+		        boot address code the kernel will pass to it to start it.
+		        This property should not be set manually.
+		   rzn1,h2mode   -- this bool property, if present, will force
+		        the kernel to configure the USB subsystem in 'host' mode,
+		        this mode will prevent the usbf 'device' driver to start.
+		        This property can be set by the bootloader in case there
+		        is a GPIO for this configutation, otherwise, it can also
+		        be set manually in the device tree to force a config.
+		 */
+	};
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clocks = <&clk_a7mp>;
+
+		cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0>;
+		};
+		cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <1>;
+		};
+	};
+	aliases {
+		serial0 = &uart0;
+		pinctrl = &pinctrl;
+		clocks = &clocks;
+		ethernet0 = &gmac0;
+		ethernet1 = &gmac1;
+		spi0 = &qspi0;
+	};
+	clocks: clocks@0 {
+		compatible = "renesas,rzn1-clock";
+		reg = <RZN1_SYSTEM_CTRL_BASE RZN1_SYSTEM_CTRL_SIZE>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+
+		/* Most of the clock definition is declared in the
+		 * autogenerated file rzn1-clocks.dtsi
+		 * Here we find the 'exceptions' - mostly grouping clocks
+		 * together to attach to drivers */
+
+		/* Needed for pinctrl access !*/
+		hclk_pinconfig { renesas,no-disable; };
+
+		clk_ddr_grp: clk_ddr_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_ddrc &hclk_ddrc>;
+		};
+		all_usbf: all_usbf {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_usbf &hclk_usbpm &clk_48_pg_f>;
+		};
+		/* USB Host Needs the USB Device clocks(!) since the EPCTR
+		 * register is in the USBF register map, and that register is
+		 * needed to start the PLL */
+		all_usbh: all_usbh {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_usbh &hclk_usbpm &clk_pci_usb &all_usbf>;
+		};
+		all_lcd: all_lcd {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_lcd &hclk_pg_i>;
+		};
+		clk_switch_all: clk_switch_all {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_switch &clk_switch>;
+		};
+		clk_rgmii_conv_all: clk_rgmii_conv_all {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_mii_ref &clk_rmii_ref &clk_rgmii_ref &hclk_switch_rg>;
+		};
+		uart_group_34567: uart_group_34567 {
+			#clock-cells = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			compatible = "renesas,rzn1-clock-bitselect";
+			/* Bit 24 is UARTCLKSEL */
+			reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2>;
+			renesas,rzn1-sel-bit = <24>;
+
+			/* If that bit is zero, use first parent, else,
+			 * use second parent */
+			clocks = <&div_p2_pg>, <&clk_48>;
+
+			/* First group are gates for when selector bit
+			 * is zero, second group is the gates to use when
+			 * bit is 'one' */
+			renesas,rzn1-gates =
+			      <RZN1_CLK_UART3_ID RZN1_CLK_UART4_ID
+				RZN1_CLK_UART5_ID RZN1_CLK_UART6_ID
+				RZN1_CLK_UART7_ID>,
+			      <RZN1_CLK_USBUART3_ID RZN1_CLK_USBUART4_ID
+				RZN1_CLK_USBUART5_ID RZN1_CLK_USBUART6_ID
+				RZN1_CLK_USBUART7_ID>;
+
+			gsclk_uart3: gsclk_uart3@0 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <0>;
+			 };
+			gsclk_uart4: gsclk_uart4@1 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <1>;
+			 };
+			gsclk_uart5: gsclk_uart5@2 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <2>;
+			 };
+			gsclk_uart6: gsclk_uart6@3 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <3>;
+			 };
+			gsclk_uart7: gsclk_uart7@4 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <4>;
+			 };
+		 };
+		 uart_group_012: uart_group_012@RZN1_SYSCTRL_REG_PWRCTRL_PG0_0 {
+			#clock-cells = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			compatible = "renesas,rzn1-clock-bitselect";
+			/* Bit 24 is UARTCLKSEL */
+			reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_0>;
+			renesas,rzn1-sel-bit = <30>;
+
+			/* If that bit is zero, use first parent, else,
+			 * use second parent */
+			clocks = <&div_uart>, <&clk_48>;
+
+			/* First group are gates for when selector bit
+			 * is zero, second group is the gates to use when
+			 * bit is 'one' */
+			renesas,rzn1-gates =
+			      <RZN1_CLK_UART0_ID RZN1_CLK_UART1_ID
+				RZN1_CLK_UART2_ID>,
+			      <RZN1_CLK_USBUART0_ID RZN1_CLK_USBUART1_ID
+				RZN1_CLK_USBUART2_ID>;
+			gsclk_uart0: gsclk_uart0@0 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <0>;
+			 };
+			gsclk_uart1: gsclk_uart1@1 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <1>;
+			 };
+			gsclk_uart2: gsclk_uart2@2 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <2>;
+			};
+		};
+		clk_i2c0_grp: clk_i2c0_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_i2c0 &hclk_i2c0>;
+		};
+		clk_i2c1_grp: clk_i2c1_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_i2c1 &hclk_i2c1>;
+		};
+		clk_spi0_grp: clk_spi0_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi0>, <&hclk_spi0>;
+		};
+		clk_spi1_grp: clk_spi1_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi1>, <&hclk_spi1>;
+		};
+		clk_spi2_grp: clk_spi2_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi2>, <&hclk_spi2>;
+		};
+		clk_spi3_grp: clk_spi3_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi3>, <&hclk_spi3>;
+		};
+		clk_spi4_grp: clk_spi4_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi4>, <&hclk_spi4>;
+		};
+		clk_spi5_grp: clk_spi5_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi5>, <&hclk_spi5>;
+		};
+	};
+
+	arm_timer: timer {
+		compatible = "arm,armv7-timer";
+		arm,cpu-registers-not-fw-configured;
+		interrupts =
+			<GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
+	};
+
+	gic: interrupt-controller@RZN1_GIC_BASE {
+		compatible = "arm,cortex-a7-gic";
+		reg = <0x44101000 0x1000>,	/* Distributer */
+		      <0x44102000 0x1000>,	/* CPU interface */
+		      <0x44104000 0x2000>,	/* Virt interface control */
+		      <0x44106000 0x2000>;	/* Virt CPU interface */
+		interrupt-controller;
+		#interrupt-cells = <3>;
+		interrupts =
+			<GIC_PPI 9 (GIC_CPU_MASK_SIMPLE(2) |
+				IRQ_TYPE_LEVEL_HIGH)>;
+	};
+
+	ipc: mailbox@RZN1_MAILBOX_BASE {
+	    compatible = "arm,pl320", "arm,primecell";
+	    reg = <RZN1_MAILBOX_BASE RZN1_MAILBOX_SIZE>;
+	    interrupts = <GIC_SPI RZN1_IRQ_IPCM_1 IRQ_TYPE_LEVEL_HIGH>;
+	    clocks = <&clk_fw>;
+	    clock-names = "apb_pclk";
+	};
+
+	gpioirq: gpioirq@RZN1_GPIO0_BASE {
+		compatible = "renesas,rzn1-gpioirq";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+
+		interrupts =
+			<GIC_SPI RZN1_IRQ_GPIO_0 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_1 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_2 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_3 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_4 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_5 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_6 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_7 IRQ_TYPE_LEVEL_HIGH>;
+
+		reg = <RZN1_GPIO0_BASE RZN1_GPIO0_SIZE>,
+			<RZN1_GPIO1_BASE RZN1_GPIO1_SIZE>,
+			<RZN1_GPIO2_BASE RZN1_GPIO2_SIZE>;
+		interrupt-controller;
+		#interrupt-cells = <1>;
+
+		/* gpioirq-3 = <&gpio1a 12 GPIO_ACTIVE_HIGH>; */
+	};
+
+	bus {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+		u-boot,dm-pre-reloc;
+
+		memory-controller@RZN1_DDR_BASE {
+			compatible = "cadence,ddr-ctrl";
+			reg = <RZN1_DDR_BASE RZN1_DDR_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DDRSUB IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&clk_ddr_grp>;
+			status = "okay";
+		};
+		pinctrl: pinctrl@RZN1_PINCTRL_BASE {
+			compatible = "renesas,rzn1-pinctrl";
+			reg = <RZN1_PINCTRL_BASE RZN1_PINCTRL_SIZE>,
+				<RZN1_PINCTRL_L2_BASE RZN1_PINCTRL_L2_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+		};
+		timer0: timer@RZN1_TIMER0_BASE {
+			compatible = "renesas,rzn1-timer";
+			reg = <RZN1_TIMER0_BASE RZN1_TIMER0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_TIMER0_0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_2 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_3 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_4 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_5 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_6 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_7 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_timer0>;
+			renesas,use-prescaler;
+			status = "disabled";
+		};
+		timer1: timer@RZN1_TIMER1_BASE {
+			compatible = "renesas,rzn1-timer";
+			reg = <RZN1_TIMER1_BASE RZN1_TIMER1_SIZE>;
+			renesas,timer-number = <1>;
+			interrupts = <GIC_SPI RZN1_IRQ_TIMER1_0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_2 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_3 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_4 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_5 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_6 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_7 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_timer1>;
+			renesas,use-prescaler;
+			status = "disabled";
+		};
+		uart0: serial@RZN1_UART0_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART0_BASE RZN1_UART0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART0 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart0 &hclk_uart0>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart1: serial@RZN1_UART1_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART1_BASE RZN1_UART1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART1 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart1 &hclk_uart1>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart2: serial@RZN1_UART2_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART2_BASE RZN1_UART2_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART2 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart2 &hclk_uart2>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart3: serial@RZN1_UART3_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART3_BASE RZN1_UART3_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART3 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart3 &hclk_uart3>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart4: serial@RZN1_UART4_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART4_BASE RZN1_UART4_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART4 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart4 &hclk_uart4>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart5: serial@RZN1_UART5_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART5_BASE RZN1_UART5_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART5 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart5 &hclk_uart5>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart6: serial@RZN1_UART6_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART6_BASE RZN1_UART6_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART6 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart6 &hclk_uart6>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart7: serial@RZN1_UART7_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART7_BASE RZN1_UART7_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART7 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			fifo-size = <16>;
+			afce-mode;
+			clocks = <&gsclk_uart7 &hclk_uart7>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		i2c0: i2c@RZN1_I2C0_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <RZN1_I2C0_BASE RZN1_I2C0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_I2C0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_i2c0_grp>;
+			clock-frequency = <100000>;
+			status = "disabled";
+		};
+		i2c1: i2c@RZN1_I2C1_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <RZN1_I2C1_BASE RZN1_I2C1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_I2C1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_i2c1_grp>;
+			clock-frequency = <100000>;
+			status = "disabled";
+		};
+		rtc0: rtc@RZN1_RTC_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "renesas,rzn1-rtc";
+			reg = <RZN1_RTC_BASE RZN1_RTC_SIZE>;
+			clock-names = "axi";
+			clocks = <&hclk_rtc>;
+			interrupt-names = "alarm", "intr", "1hz";
+			interrupts =
+				<GIC_SPI RZN1_IRQ_RTCATINTAL IRQ_TYPE_EDGE_RISING>,
+				<GIC_SPI RZN1_IRQ_RTCATINTR IRQ_TYPE_EDGE_RISING>,
+				<GIC_SPI RZN1_IRQ_RTCATINT1S IRQ_TYPE_EDGE_RISING>;
+			status = "disabled";
+		};
+		gmac0: ethernet@RZN1_GMAC0_BASE {
+			compatible = "snps,dwmac-3.72a", "snps,dwmac";
+			reg = <RZN1_GMAC0_BASE RZN1_GMAC0_SIZE>;
+			interrupt-parent = <&gic>;
+			interrupts = <GIC_SPI RZN1_IRQ_SBD0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_LPI0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_PMT0 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-names = "macirq", "eth_lpi", "eth_wake_irq";
+			clock-names = "stmmaceth";
+			clocks = <&hclk_gmac0>;
+			status = "disabled";
+		};
+		gmac1: ethernet@RZN1_GMAC1_BASE {
+			compatible = "snps,dwmac-3.72a", "snps,dwmac";
+			reg = <RZN1_GMAC1_BASE RZN1_GMAC1_SIZE>;
+			interrupt-parent = <&gic>;
+			interrupts = <GIC_SPI RZN1_IRQ_SBD1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_LPI1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_PMT1 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-names = "macirq", "eth_lpi", "eth_wake_irq";
+			clock-names = "stmmaceth";
+			clocks = <&hclk_gmac1>;
+			status = "disabled";
+		};
+		switch: ethswitch: eth-switch@RZN1_SWITCH_BASE {
+			compatible = "mtip,5pt_switch";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_SWITCH_BASE RZN1_SWITCH_SIZE>;
+			clock-names = "fck";
+			clocks = <&clk_switch_all>;
+			status = "disabled";
+		};
+		eth_miic: eth-miic@RZN1_SWITCH_CTRL_REG_BASE {
+			compatible = "renesas,rzn1-miic";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_SWITCH_CTRL_REG_BASE RZN1_SWITCH_CTRL_REG_SIZE>;
+			status = "disabled";
+			clocks = <&clk_rgmii_conv_all>;
+		};
+
+		dma0: dma-controller@RZN1_DMA0_BASE {
+			compatible = "snps,dma-rzn1";
+			reg = <RZN1_DMA0_BASE RZN1_DMA0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DMA0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "hclk";
+			clocks = <&hclk_dma0>;
+			dma-channels = <8>;
+			dma-requests = <16>;
+			dma-masters = <1>;
+			#dma-cells = <3>;
+			block_size = <0xfff>;
+			data_width = <3>;
+			status = "disabled";
+		};
+		dma1: dma-controller@RZN1_DMA1_BASE {
+			compatible = "snps,dma-rzn1";
+			reg = <RZN1_DMA1_BASE RZN1_DMA1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DMA1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "hclk";
+			clocks = <&hclk_dma1>;
+			dma-channels = <8>;
+			dma-requests = <16>;
+			dma-masters = <1>;
+			#dma-cells = <3>;
+			block_size = <0xfff>;
+			data_width = <3>;
+			status = "disabled";
+		};
+		sdio0: sdhci@RZN1_SDIO0_BASE {
+			compatible = "arasan,sdhci-8.9a";
+			reg = <RZN1_SDIO0_BASE RZN1_SDIO0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SDIO0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_SDIO0_WKUP IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "clk_xin", "clk_ahb";
+			clocks = <&clk_sdio0>, <&hclk_sdio0>;
+			no-1-8-v;
+			status = "disabled";
+		};
+		sdio1: sdhci@RZN1_SDIO1_BASE {
+			compatible = "arasan,sdhci-8.9a";
+			reg = <RZN1_SDIO1_BASE RZN1_SDIO1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SDIO1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_SDIO1_WKUP IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "clk_xin", "clk_ahb";
+			clocks = <&clk_sdio1>, <&hclk_sdio1>;
+			no-1-8-v;
+			status = "disabled";
+		};
+		qspi: qspi0: spi@RZN1_QSPI_BASE {
+			compatible = "renesas,rzn1-qspi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_QSPI_BASE RZN1_QSPI_SIZE
+				RZN1_V_QSPI_BASE RZN1_V_QSPI_SIZE>;
+			reg-names = "qspi", "qspi-mapping";
+			interrupts = <GIC_SPI RZN1_IRQ_QSPI0 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_qspi0>, <&clk_qspi0>;
+			clock-names = "flexway", "pclk";
+			status = "disabled";
+		};
+		nand: nand@RZN1_NAND_BASE {
+			compatible = "evatronix,nandflash-ctrl";
+			reg = <RZN1_NAND_BASE RZN1_NAND_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_NAND IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_nand>, <&clk_nand>;
+			clock-names = "clka", "clkb";
+			#address-cells		= <1>;
+			#size-cells		= <1>;
+			status = "disabled";
+		};
+		/*
+		 * SPI 0-3 are Master; 4-5 are Slave. 4-16 bits data width
+		 * dw_apb-ssi is configured with 16*16 bits FIFO in both
+		 * directions.
+		 * 4 Chipselects for the master interfaces, 1 for slaves
+		 */
+		spi0: spi@RZN1_SPI0_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI0_BASE RZN1_SPI0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi0_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi1: spi@RZN1_SPI1_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI1_BASE RZN1_SPI1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi1_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi2: spi@RZN1_SPI2_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI2_BASE RZN1_SPI2_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI2 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi2_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi3: spi@RZN1_SPI3_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI3_BASE RZN1_SPI3_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI3 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi3_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi4: spi@RZN1_SPI4_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI4_BASE RZN1_SPI4_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI4 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi4_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <1>; /* Slave interface */
+			status = "disabled";
+		};
+		spi5: spi@RZN1_SPI5_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI5_BASE RZN1_SPI5_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI5 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi5_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <1>; /* Slave interface */
+			status = "disabled";
+		};
+		usbphy: usbphy0: usbphy@0 {
+			#phy-cells = <0>;
+			compatible = "usb-nop-xceiv";
+			status = "disabled";
+		};
+		usbf: usbf@RZN1_USB_DEV_BASE {
+			compatible = "renesas,rzn1-usbf";
+			reg = <RZN1_USB_DEV_BASE RZN1_USB_DEV_SIZE>;
+			interrupts =
+				<GIC_SPI RZN1_IRQ_USBF_EPC IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI RZN1_IRQ_USBF IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "axi";
+			clocks = <&all_usbf>;
+
+			renesas,sram-size = <5024>; /* 32 bits words */
+			/* Allow 4 x 512 byte packets per endpoint to support MTU of 1500.
+			Due to protocol overheads, 3 x 512 byte packets is not enough. */
+			renesas,sram-conf,g_ether = <4 2 0>;
+			renesas,sram-conf,g_mass_storage = <8 8 0 0 0 0>;
+			status = "disabled";
+		};
+		usbh_pci: pci@RZN1_USB_HOST_BASE {
+			compatible = "renesas,pci-rzn1";
+			device_type = "pci";
+			clock-names = "axi";
+			clocks = <&all_usbh>;
+			reg = <(RZN1_USB_HOST_BASE+0x10000) 0xc00>,
+			      <RZN1_USB_HOST_BASE 0x1100>;
+			interrupts = <GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH>;
+			status = "disabled";
+
+			bus-range = <0 0>;
+			#address-cells = <3>;
+			#size-cells = <1>;
+			#interrupt-cells = <1>;
+			ranges = <0x02000000 0 RZN1_USB_HOST_BASE RZN1_USB_HOST_BASE 0x00010000>;
+			/* Should map all possible DDR as inbound ranges, but
+			   the IP only supports a 256MB, 512MB, or 1GB window */
+			/* flags, PCI addr (64-bit), CPU addr, PCI size (64-bit) */
+			dma-ranges = <0x42000000 0 0x80000000 0x80000000 0 0x40000000>;
+			interrupt-map-mask = <0xff00 0 0 0x7>;
+			interrupt-map = <0x0000 0 0 1 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH
+					 0x0800 0 0 1 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH
+					 0x1000 0 0 2 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH>;
+
+			usb@0,1 {
+				reg = <0x800 0 0 0>;
+				device_type = "pci";
+				phys = <&usbphy 0 0>;
+				phy-names = "usb";
+			};
+
+			usb@0,2 {
+				reg = <0x1000 0 0 0>;
+				device_type = "pci";
+				phys = <&usbphy 0 0>;
+				phy-names = "usb";
+			};
+		};
+		reset: reset@RZN1_RESET_BASE {
+			reg = <RZN1_RESET_BASE RZN1_RESET_SIZE>;
+			clocks = <&hclk_pinconfig>;
+		};
+		wdtsafe0: wdtsafe0@RZN1_WATCHDOGSAFE0_BASE {
+			compatible = "renesas,rzn1-watchdogsafe";
+			reg = <RZN1_WATCHDOGSAFE0_BASE RZN1_WATCHDOGSAFE0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_WATCHDOGSAFE0 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_pinconfig>;
+			status = "disabled";
+		};
+		wdtsafe1: wdtsafe1@RZN1_WATCHDOGSAFE1_BASE {
+			compatible = "renesas,rzn1-watchdogsafe";
+			reg = <RZN1_WATCHDOGSAFE1_BASE RZN1_WATCHDOGSAFE1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_WATCHDOGSAFE1 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_pinconfig>;
+			status = "disabled";
+		};
+		/*
+		 * The GPIO mapping to the corresponding pins is complicted,
+		 * see the hardware documentation for details.
+		 */
+		gpio0: gpio@RZN1_GPIO0_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO0_BASE RZN1_GPIO0_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio0>;
+			status = "disabled";
+
+			gpio0a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio0a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <8>;
+			};
+			gpio0b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio0b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <1>;
+			};
+		};
+		gpio1: gpio@RZN1_GPIO1_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO1_BASE RZN1_GPIO1_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio1>;
+			status = "disabled";
+
+			/* GPIO1a[0..4] corresponds to pins 45..49 */
+			/* GPIO1a[5..31] corresponds to pins 71..121 */
+			gpio1a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio1a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <9>;
+			};
+			/* GPIO1b[0..1] corresponds to pins 31..32 */
+			/* GPIO1b[2..4] corresponds to pins 35..37 */
+			/* GPIO1b[5..25] corresponds to pins 50..70 */
+			/* GPIO1b[26..31] corresponds to pins 150..155 */
+			gpio1b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio1b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <1>;
+			};
+		};
+		gpio2: gpio@RZN1_GPIO2_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO2_BASE RZN1_GPIO2_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio2>;
+			status = "disabled";
+
+			/* GPIO2a[0..27] corresponds to pins 122..149 */
+			/* GPIO2a[28..31] corresponds to pins 156..159 */
+			gpio2a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio2a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <10>;
+			};
+			/* GPIO2b[0..9] corresponds to pins 160..169 */
+			gpio2b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio2b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <10>;
+				reg = <1>;
+			};
+		};
+		sgpio0: gpio@RZN1_SGPIO0_BASE {
+			reg = <RZN1_SGPIO0_BASE RZN1_SGPIO0_SIZE>;
+		};
+		sgpio1: gpio@RZN1_SGPIO1_BASE {
+			reg = <RZN1_SGPIO1_BASE RZN1_SGPIO1_SIZE>;
+		};
+		can0: can@RZN1_CAN0_BASE {
+			compatible = "nxp,sja1000";
+			reg = <RZN1_CAN0_BASE RZN1_CAN0_SIZE>;
+			reg-io-width = <4>;
+			interrupts = <GIC_SPI RZN1_IRQ_CAN0 IRQ_TYPE_LEVEL_HIGH>;
+			nxp,no-cdr;
+			nxp,no-loopback;
+			clocks = <&hclk_can0>;
+			status = "disabled";
+		};
+		can1: can@RZN1_CAN1_BASE {
+			compatible = "nxp,sja1000";
+			reg = <RZN1_CAN1_BASE RZN1_CAN1_SIZE>;
+			reg-io-width = <4>;
+			interrupts = <GIC_SPI RZN1_IRQ_CAN1 IRQ_TYPE_LEVEL_HIGH>;
+			nxp,no-cdr;
+			nxp,no-loopback;
+			clocks = <&hclk_can1>;
+			status = "disabled";
+		};
+		fb0: fb@RZN1_LCD_BASE {
+			compatible = "digitalblocks,db9000-clcd";
+			interrupts = <GIC_SPI RZN1_IRQ_LCD IRQ_TYPE_LEVEL_HIGH>;
+			reg = <RZN1_LCD_BASE RZN1_LCD_SIZE>;
+			clock-names = "pclk", "ahb";
+			clocks = <&clk_slcd>, <&all_lcd>;
+			status = "disabled";
+		};
+		msebi: msebim: memory-controller@RZN1_MSEBI_M0_BASE {
+			compatible = "renesas,rzn1-msebi";
+			#address-cells = <2>;
+			#size-cells = <1>;
+			reg = <RZN1_MSEBI_M0_BASE RZN1_MSEBI_M0_SIZE>;
+			clocks = <&hclk_msebi_m>;
+			interrupts = <GIC_SPI RZN1_IRQ_MSEBIM IRQ_TYPE_LEVEL_HIGH>;
+			status = "disabled";
+		};
+
+		/* These nodes are placeholders; they are refered to by the
+		 * pinmux file, but have no driver just yet, so we create
+		 * empty nodes for them until we can flesh it up */
+		unknown: s3: dsigma: mii: motor: unknown {
+		};
+	};
+
+};
+
+#include "rzn1-clocks.dtsi"
-- 
2.7.4

